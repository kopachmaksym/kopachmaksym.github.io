import telebot
import config

from telebot import types

bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    lang1 = types.KeyboardButton("Ukrainian")
    lang2 = types.KeyboardButton("English")

    markup.add(lang1, lang2)

    bot.send_message(message.chat.id, "Please, select the language: ",
                     parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def menu(message):
    if message.chat.type == 'private':
        if message.text == 'English':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("‚ÑπÔ∏è Information", callback_data='inf_eng')
            item2 = types.InlineKeyboardButton("üí≥ Buy", web_app=types.WebAppInfo('https://store.animal-id.net/en/catalog/tag-usa/67'))

            markup.add(item1, item2)

            bot.send_message(message.chat.id, "Hi, {0.first_name}!\nI'm <b>{1.first_name}</b>,"
                                              " bot which created for selling the goods from Telegram."
                                              "\n\nPress the button: ".format(
                         message.from_user, bot.get_me()),
                             parse_mode='html', reply_markup=markup)

        elif message.text == 'Ukrainian':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", callback_data='inf_ukr')
            item2 = types.InlineKeyboardButton("üí≥ –ö—É–ø–∏—Ç–∏", web_app=types.WebAppInfo('https://store.animal-id.net/ua/catalog/tag-ua/66'))

            markup.add(item1, item2)

            types.WebAppInfo('https://store.animal-id.net/ua/catalog/tag-ua/66')
            bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}</b>,"
                                              " –±–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω–∏–π –¥–ª—è –ø—Ä–æ–¥–∞–∂—É —Ç–æ–≤–∞—Ä—ñ–≤ —á–µ—Ä–µ–∑ –¢–µ–ª–µ–≥—Ä–∞–º."
                                              " \n\n–í–∏–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –≤–∞–º –æ–ø—Ü—ñ—é: ".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')

            bot.answer_web_app_query()

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
                                  reply_markup=None)

    except Exception as e:
        print(repr(e))

#https://store.animal-id.net/ua/catalog/tag-ua/66
#https://store.animal-id.net/en/catalog/tag-usa/67

# @bot.message_handler(content_types=['text'])
# def lalala(message):
#     if message.chat.type == 'private':
#         if message.text == '‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è':
#             bot.send_message(message.chat.id, str(random.randint(0, 100)))
#         elif message.text == 'üí≥ –ö—É–ø–∏—Ç–∏':
#
#             telebot.TeleBot.
#
#             # markup = types.InlineKeyboardMarkup(row_width=2)
#             # item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
#             # item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
#             #
#             # markup.add(item1, item2)
#             #
#             # bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
#         else:
#             bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')


# @bot.message_handler(content_types=['text'])
# def lalala(message):
#     if message.chat.type == 'private':
#         if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
#             bot.send_message(message.chat.id, str(random.randint(0, 100)))
#         elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':
#
#             markup = types.InlineKeyboardMarkup(row_width=2)
#             item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
#             item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
#
#             markup.add(item1, item2)
#
#             bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
#         else:
#             bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')

#
# @bot.callback_query_handler(func=lambda call: True)
# def callback_inline(call):
#     try:
#         if call.message:
#             if call.data == 'good':
#                 bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
#             elif call.data == 'bad':
#                 bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')
#
#             # remove inline buttons
#             bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
#                                   reply_markup=None)
#
#             # show alert
#             # bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
#                                       # text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")
#
#     except Exception as e:
#         print(repr(e))


# RUN
bot.polling(none_stop=True)